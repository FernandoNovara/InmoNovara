@model InmoNovara.Models.Inmueble

@{
    ViewData["Title"] = "Create";
}

<h1>Nuevo Inmueble</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Tipo" class="control-label"></label>
                <input asp-for="Tipo" class="form-control" />
                <span asp-validation-for="Tipo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Ambiente" class="control-label"></label>
                <input asp-for="Ambiente" class="form-control" />
                <span asp-validation-for="Ambiente" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Tamaño" class="control-label"></label>
                <input asp-for="Tamaño" class="form-control" />
                <span asp-validation-for="Tamaño" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="IdPropietario" class="control-label"></label>
                <select class="form-control" name="IdPropietario">
                    @foreach (var item in (List<Propietario>)ViewBag.propietarios)
                    {
                        <option value="@item.Id">@(item.Nombre+" "+item.Apellido)</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <input type="submit" value="Guardar" class="btn btn-primary" />
                <a class="btn btn-primary" asp-action="Index">Volver</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
